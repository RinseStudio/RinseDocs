---
const { size = 'md', fluid = false, disabled = false, danger = false } = Astro.props;

let sizeClass;

const getSizeClass = (size) => {
	switch (size) {
		case 'xs':
			return 'text-[12px] px-2 min-w-[28px] h-[28px]';
		case 'sm':
			return 'text-[13px] px-2.5 min-w-[32px] h-[32px]';
		case 'md':
			return 'text-[14px] px-3 min-w-[36px] h-[36px]';
		case 'lg':
			return 'text-[15px] px-3.5 min-w-[40px] h-[40px]';
		case 'xl':
			return 'text-[16px] px-4 min-w-[44px] h-[44px]';
	}
};

const getDangerClass = (danger) => {
	switch (danger) {
		case false:
			return 'text-gray-900 bg-transparent shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 dark:hover:bg-gray-200/20 disabled:bg-gray-50 disabled:text-gray-400 dark:disabled:bg-blue-300/30';
		case true:
			return 'text-red-600 dark:text-red-300 bg-transparent shadow-sm ring-1 ring-inset ring-red-300 hover:bg-red-50 dark:hover:bg-red-500/20';
	}
};

const getFluidClass = (fluid) => {
	switch (fluid) {
		case false:
			return '';
		case true:
			return 'w-full';
	}
};
---

<button
	type="button"
	class={`
		rounded-md
		font-semibold
		${getSizeClass(size)}
		${getDangerClass(danger)}
		${getFluidClass(fluid)}
  `}
	disabled={disabled}
>
	<slot />
</button>
