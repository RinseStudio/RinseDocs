---
export interface SidebarListProps {
	data: any[];
}

const { data } = Astro.props;
---

<!-- <ul class="" transition:persist>
	{
		data.map((section, index) => {
			const sectionKey = Object.keys(section)[0];
			const sectionData = section[sectionKey];
			// console.dir(sectionData, { depth: null });
			return (
				<>
					{sectionData.content[0].depth === 1 ? (
						<li x-data="{open: true}">
							<button class="text-[11px] font-bold uppercase leading-[32px] tracking-wide text-slate-300/70" x-on:click="open = !open, active = !active">
								<div class="group/sidebarParent inline-flex items-center">
									{sectionData.label}
									<svg
										x-bind:class="open ? '' : '-rotate-90'"
										xmlns="http://www.w3.org/2000/svg"
										viewBox="0 0 20 20"
										fill="currentColor"
										class="h-4 w-4 opacity-0 duration-200 group-hover/sidebarParent:opacity-100"
									>
										<path
											fill-rule="evenodd"
											d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z"
											clip-rule="evenodd"
										/>
									</svg>
								</div>
							</button>
							<div x-cloak x-show="open == true">
								<ul>
									{sectionData.content.map((item) => (
										<li>
											<a
												data-slug={'/' + item.slug}
												x-on:click="updateLinks($el)"
												x-bind:class={'activeSlug === ' + "'/" + item.slug + "'" + " ? 'rounded-[6px] text-white font-semibold bg-slate-300/[0.08]' : 'text-slate-200/60'"}
												href={'/' + item.slug}
												class="inline-flex w-full px-[12px] text-sm leading-[32px] hover:text-white"
											>
												{item.title}
											</a>
										</li>
									))}
								</ul>
								{sectionData.children.length > 0 && <Astro.self data={sectionData.children} />}
							</div>
						</li>
					) : (
						<li x-data="{open: false}" class="last:mb-4">
							<button class="w-full text-sm leading-[32px] text-slate-200/60 hover:text-white" x-data="{active: false}" x-on:click="open = !open, active = !active">
								<div
									class="group/sidebarParent inline-flex w-full items-center justify-between pl-[12px]"
									x-bind:class="active == true ? 'text-white' : 'text-slate-200/60 hover:text-white'"
								>
									{sectionData.label}
									<svg
										x-bind:class="open ? '' : '-rotate-90'"
										xmlns="http://www.w3.org/2000/svg"
										viewBox="0 0 20 20"
										fill="currentColor"
										class="group-hov2er/sidebarParent:opacity-100 h-4 w-4 opacity-100 duration-200"
									>
										<path
											fill-rule="evenodd"
											d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z"
											clip-rule="evenodd"
										/>
									</svg>
								</div>
							</button>
							<ul class="ml-[12px]" x-cloak x-show="open == true">
								{sectionData.content.map((item) => (
									<li>
										<a
											data-slug={'/' + item.slug}
											x-on:click="updateLinks($el)"
											x-bind:class={'activeSlug === ' + "'/" + item.slug + "'" + " ? 'rounded-[6px] text-white font-semibold bg-slate-300/[0.08]' : 'text-slate-200/60'"}
											href={'/' + item.slug}
											class="inline-flex w-full px-[12px] text-sm leading-[32px] hover:text-white"
										>
											{item.title}
										</a>
									</li>
								))}
							</ul>
							<div class="ml-[12px]" x-cloak x-show="open == true">
								{sectionData.children.length > 0 && <Astro.self data={sectionData.children} />}
							</div>
						</li>
					)}
				</>
			);
		})
	}
</ul> -->
