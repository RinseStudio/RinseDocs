---
import { twMerge } from 'tailwind-merge';
const { data, isVisible, className, ...props } = Astro.props;

const defaultData = {
  isVisible: isVisible,
};

const xData = JSON.stringify({ ...defaultData, ...data }, null, 2).replace(/"/g, `'`);
---

<div x-data={`Tooltip(${xData})`} class={twMerge('', className)} {...props}>
  <slot />
</div>
<script>
  import Alpine from 'alpinejs';

  document.addEventListener('alpine:init', () => {
    Alpine.data('Tooltip', (initialState = {}) => ({
      isVisible: initialState.isVisible,
      init() {
        this.setState(initialState);
      },
      setState(state) {
        for (const path in state) {
          const pathParts = path.split('.');
          let currentPart = this;

          for (let i = 0; i < pathParts.length - 1; i++) {
            if (currentPart[pathParts[i]] === undefined) {
              console.warn(`State path "${pathParts[i]}" not found.`);
              return;
            }
            currentPart = currentPart[pathParts[i]];
          }

          const lastPart = pathParts[pathParts.length - 1];
          if (currentPart[lastPart] === undefined) {
            console.warn(`State path "${lastPart}" not found.`);
          } else {
            // Check if we are modifying a property inside className
            if (path.startsWith('className.')) {
              // Use twMerge for className properties
              currentPart[lastPart] = twMerge(currentPart[lastPart], state[path]);
            } else {
              // Directly assign the value for other properties
              currentPart[lastPart] = state[path];
            }
          }
        }
      },
      getClass(path) {
        const pathParts = path.split('.');
        let currentPart = this.className;

        for (const part of pathParts) {
          if (currentPart[part] === undefined) {
            console.warn(`Class path "${path}" not found.`);
            return '';
          }
          currentPart = currentPart[part];
        }
        return currentPart;
      },
    }));
  });
</script>
