---
const {
  isOpen = false,
  className = null,
  widthClass = null,
  direction = 'bottomRight',
  enterClass = null,
  enterStartClass = null,
  enterEndClass = null,
  leaveClass = null,
  leaveStartClass = null,
  leaveEndClass = null,
} = Astro.props;

const getClass = (direction, property) => {
  const schema = {
    topRight: {
      class: `bottom-full right-0 mb-2`,
      enter: `transition ease-out duration-200`,
      enterStart: `opacity-0 translate-y-2`,
      enterEnd: `opacity-100 -translate-y-0`,
      leave: `transition ease-in duration-200`,
      leaveStart: `opacity-100 -translate-y-0`,
      leaveEnd: `opacity-0 translate-y-2`,
    },
    topLeft: {
      class: `bottom-full left-0 mb-2`,
      enter: `transition ease-out duration-200`,
      enterStart: `opacity-0 translate-y-2`,
      enterEnd: `opacity-100 -translate-y-0`,
      leave: `transition ease-in duration-200`,
      leaveStart: `opacity-100 -translate-y-0`,
      leaveEnd: `opacity-0 translate-y-2`,
    },
    bottomRight: {
      class: `top-full left-0 mt-2`,
      enter: `transition ease-out duration-200`,
      enterStart: `opacity-0 -translate-y-2`,
      enterEnd: `opacity-100 translate-y-0`,
      leave: `transition ease-in duration-200`,
      leaveStart: `opacity-100 translate-y-0`,
      leaveEnd: `opacity-0 -translate-y-2`,
    },
    bottomLeft: {
      class: `top-full right-0 mt-2`,
      enter: `transition ease-out duration-200`,
      enterStart: `opacity-0 -translate-y-2`,
      enterEnd: `opacity-100 translate-y-0`,
      leave: `transition ease-in duration-200`,
      leaveStart: `opacity-100 translate-y-0`,
      leaveEnd: `opacity-0 -translate-y-2`,
    },
  };

  return schema[direction][property];
};
---

<div class={`relative ${className ? className : ''}`} x-data={`{isOpen: ${isOpen == true ? 'true}' : 'false}'}`}>
  <slot />

  <div
    x-cloak
    x-show="isOpen"
    x-on:click.away="isOpen = false"
    x-transition:enter={`${getClass(direction, 'enter')} ${enterClass} `}
    x-transition:enter-start={`${getClass(direction, 'enterStart')} ${enterStartClass}`}
    x-transition:enter-end={`${getClass(direction, 'enterEnd')} ${enterEndClass}`}
    x-transition:leave={`${getClass(direction, 'leave')} ${leaveClass} `}
    x-transition:leave-start={`${getClass(direction, 'leaveStart')} ${leaveStartClass} `}
    x-transition:leave-end={`${getClass(direction, 'leaveEnd')} ${leaveEndClass} `}
    class={`${
      widthClass ? widthClass : 'w-[200px]'
    } ring-1 ring-zinc-200 dark:ring-zinc-700 absolute z-10 rounded-lg divide-y divide-zinc-200 dark:divide-zinc-700 shadow-md bg-white dark:bg-zinc-800 ${getClass(
      direction,
      'class',
    )} `}
  >
    <slot name="dropdown-content" />
  </div>
</div>
