---
import SidebarListRecursive from '@components/SidebarList.astro';

export interface SidebarListProps {
	data: any[];
}

const { data } = Astro.props;
---

<ul transition:persist>
	{
		data.map((section, index) => {
			const sectionKey = Object.keys(section)[0];
			const sectionData = section[sectionKey];
			return (
				<li x-data={sectionData.content[0].depth === 1 ? '{open: true}' : '{open: false}'} x-cloak class="ml-3" class:list={sectionData.content[0].depth === 1 ? '' : ''}>
					<button
						class="text-[13px] leading-[28px]"
						class:list={sectionData.content[0].depth === 1 ? ' font-semibold text-white' : 'text-white/60 hover:text-white'}
						x-data={sectionData.content[0].depth === 1 ? '' : '{active: false}'}
						x-on:click="open = !open, active = !active"
					>
						<div class="inline-flex items-center gap-0.5" x-bind:class="active == true ? 'text-white' : 'text-white/60 hover:text-white'">
							{sectionData.label}
							<svg x-bind:class="open ? '-rotate-180' : ''" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="h-4 w-4 duration-100">
								<path
									fill-rule="evenodd"
									d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z"
									clip-rule="evenodd"
								/>
							</svg>
						</div>
					</button>
					<div x-show="open == true" class:list={sectionData.content[0].depth === 1 ? 'mb-3' : ''}>
						<ul x-cloak class="ml-3">
							{sectionData.content.map((item) => (
								<li>
									<a
										data-slug={'/' + item.slug}
										x-on:click="updateLinks($el)"
										href={'/' + item.slug}
										class="sidebar-link text-[13px] leading-[28px] hover:text-white"
										class:list={item.isCurrent ? 'text-white' : 'text-white/60'}
									>
										{item.title}
									</a>
								</li>
							))}
						</ul>
						{sectionData.children.length > 0 && <SidebarListRecursive data={sectionData.children} />}
					</div>
				</li>
			);
		})
	}
</ul>
