---
import { ViewTransitions } from 'astro:transitions';
const { className, ...props } = Astro.props;
import '@/styles/app.css';
---

<!doctype html>
<html lang="en" x-data="app">
  <head>
    <!-- Meta -->
    <meta charset="UTF-8" />
    <meta name="robots" content="noindex, nofollow" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- Font Awesome 6 -->
    <link href="/vendors/fontawesome/css/fontawesome.css" rel="stylesheet" />
    <link href="/vendors/fontawesome/css/brands.css" rel="stylesheet" />
    <link href="/vendors/fontawesome/css/solid.css" rel="stylesheet" />
    <link href="/vendors/fontawesome/css/regular.css" rel="stylesheet" />

    <!-- Chart JS -->
    <script defer src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  </head>
  <body class="font-sans font-normal text-slate-500 antialiased">
    <div class={className} {...props}>
      <slot />
    </div>

    <script src="https://unpkg.com/lucide@latest"></script>
    <script is:inline>
      document.addEventListener('DOMContentLoaded', function () {
        Alpine.start();
        lucide.createIcons();
      });
    </script>
  </body>
</html>

<script>
  import Alpine from 'alpinejs';
  import persist from '@alpinejs/persist';
  import anchor from '@alpinejs/anchor';

  Alpine.plugin(persist);
  Alpine.plugin(anchor);

  window.Alpine = Alpine;

  document.addEventListener('alpine:init', () => {
    Alpine.data('app', (sidebarSetting = true, tocSetting = true, fluidWidthSetting = true) => ({
      APP: {
        slideReady(e) {
          e.preventDefault();
          this.APP.slideMoveHandler = this.APP.slideMove.bind(this); // Save a reference to the bound slideMove function

          this.cursorOffset = e.clientX - this.$refs.slideHandle.getBoundingClientRect().x;
          document.body.style.pointerEvents = 'none';
          document.documentElement.style.cursor = 'grabbing';

          document.addEventListener('mousemove', this.APP.slideMoveHandler);
          document.addEventListener('mouseup', this.APP.slideFinish.bind(this));
        },
        slideFinish() {
          document.body.style.pointerEvents = 'auto';
          document.documentElement.style.cursor = 'default';
          document.removeEventListener('mousemove', this.APP.slideMoveHandler);
          this.$refs.slideHandle.style.opacity = '';
        },
        slideMove(e) {
          let sidebarWidth = e.clientX;
          const sidebar = document.querySelector('.app');
          this.$refs.slideHandle.style.opacity = 1;

          if (sidebarWidth >= 100 + this.cursorOffset) {
            if (sidebarWidth >= 500 + this.cursorOffset) {
              sidebar.style.setProperty('--sidebar-width', 500 - this.cursorOffset + 'px');
              Alpine.store('GLOBAL').showSidebar = false;
            } else {
              sidebar.style.setProperty('--sidebar-width', sidebarWidth - this.cursorOffset + 'px');
            }

            Alpine.store('GLOBAL').showSidebar = true;
          } else if (sidebarWidth <= 80 + this.cursorOffset) {
            sidebar.style.setProperty('--sidebar-width', 12 + 'px');
            Alpine.store('GLOBAL').showSidebar = false;
          } else {
            sidebar.style.setProperty('--sidebar-width', sidebarWidth - this.cursorOffset + 'px');
            Alpine.store('GLOBAL').showSidebar = true;
          }
        },
      },
    }));
  });
</script>
